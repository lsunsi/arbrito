{
  "address": "0xe96B6680a8ef1D8d561171948226bc3A133fA56D",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "enum Arbrito.Borrow",
          "name": "borrow",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "uniswapPair",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "balancerPool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "uniswapToken0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "uniswapToken1",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "uniswapReserve0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "uniswapReserve1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "perform",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "uniswapV2Call",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x85e5de886541ddc988d97981a54d46a36d25bb5a3f368105d3e2c2db448adaae",
  "receipt": {
    "to": null,
    "from": "0xAf43007aD675D6C72E96905cf4d8acB58ba0E041",
    "contractAddress": "0xe96B6680a8ef1D8d561171948226bc3A133fA56D",
    "transactionIndex": 64,
    "gasUsed": "514977",
    "logsBloom": "0x
    "blockHash": "0x2bda4bd0f380de92cd45b79c649019a8411dd02c883ed7c92f0998b236a0bff1",
    "transactionHash": "0x85e5de886541ddc988d97981a54d46a36d25bb5a3f368105d3e2c2db448adaae",
    "logs": [],
    "blockNumber": 11297765,
    "cumulativeGasUsed": "9439236",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "7d31a0f7825a917b69f5295f2cefa0ef",
  "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"enum Arbrito.Borrow\",\"name\":\"borrow\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"uniswapPair\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"balancerPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"uniswapToken0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"uniswapToken1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"uniswapReserve0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"uniswapReserve1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"perform\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV2Call\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Arbrito.sol\":\"Arbrito\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Arbrito.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0-only\\npragma solidity 0.7.5;\\n\\nimport \\\"./external/IBalancer.sol\\\";\\nimport \\\"./external/IUniswap.sol\\\";\\nimport \\\"./external/IERC20.sol\\\";\\n\\ncontract Arbrito is IUniswapPairCallee {\\n  enum Borrow { Token0, Token1 }\\n\\n  function perform(\\n    Borrow borrow,\\n    uint256 amount,\\n    address uniswapPair,\\n    address balancerPool,\\n    address uniswapToken0,\\n    address uniswapToken1,\\n    uint256 uniswapReserve0,\\n    uint256 uniswapReserve1,\\n    uint256 blockNumber\\n  ) external {\\n    require(block.number == blockNumber, \\\"Delayed execution\\\");\\n\\n    (uint256 reserve0, uint256 reserve1, ) = IUniswapPair(uniswapPair).getReserves();\\n    require(reserve0 == uniswapReserve0, \\\"Reserve0 mismatch\\\");\\n    require(reserve1 == uniswapReserve1, \\\"Reserve1 mismatch\\\");\\n\\n    bytes memory payload =\\n      abi.encode(\\n        balancerPool,\\n        msg.sender,\\n        uniswapToken0,\\n        uniswapToken1,\\n        uniswapReserve0,\\n        uniswapReserve1\\n      );\\n\\n    if (borrow == Borrow.Token0) {\\n      IUniswapPair(uniswapPair).swap(amount, 0, address(this), payload);\\n    } else {\\n      IUniswapPair(uniswapPair).swap(0, amount, address(this), payload);\\n    }\\n  }\\n\\n  function uniswapV2Call(\\n    address, // sender\\n    uint256 amount0,\\n    uint256 amount1,\\n    bytes calldata data\\n  ) external override {\\n    (\\n      address balancerPoolAddress,\\n      address ownerAddress,\\n      address token0,\\n      address token1,\\n      uint256 reserve0,\\n      uint256 reserve1\\n    ) = abi.decode(data, (address, address, address, address, uint256, uint256));\\n\\n    uint256 amountTrade;\\n    uint256 amountPayback;\\n\\n    address tokenPayback;\\n    address tokenTrade;\\n\\n    if (amount0 != 0) {\\n      amountTrade = amount0;\\n      (tokenTrade, tokenPayback) = (token0, token1);\\n      amountPayback = calculateUniswapPayback(amountTrade, reserve1, reserve0);\\n    } else {\\n      amountTrade = amount1;\\n      (tokenPayback, tokenTrade) = (token0, token1);\\n      amountPayback = calculateUniswapPayback(amountTrade, reserve0, reserve1);\\n    }\\n\\n    IERC20(tokenTrade).approve(balancerPoolAddress, amountTrade);\\n\\n    (uint256 balancerAmountOut, ) =\\n      IBalancerPool(balancerPoolAddress).swapExactAmountIn(\\n        tokenTrade,\\n        amountTrade,\\n        tokenPayback,\\n        amountPayback,\\n        uint256(-1)\\n      );\\n\\n    require(IERC20(tokenPayback).transfer(msg.sender, amountPayback), \\\"Payback failed\\\");\\n\\n    require(\\n      IERC20(tokenPayback).transfer(ownerAddress, balancerAmountOut - amountPayback),\\n      \\\"Sender transfer failed\\\"\\n    );\\n  }\\n\\n  function calculateUniswapPayback(\\n    uint256 amountOut,\\n    uint256 reserveIn,\\n    uint256 reserveOut\\n  ) internal pure returns (uint256) {\\n    uint256 numerator = reserveIn * amountOut * 1000;\\n    uint256 denominator = (reserveOut - amountOut) * 997;\\n    return numerator / denominator + 1;\\n  }\\n}\\n\",\"keccak256\":\"0xc7967da36b1563418db322015db2733f54dd266099cc278f4f9e7f439b5815e7\",\"license\":\"GPL-3.0-only\"},\"contracts/external/IBalancer.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0-only\\npragma solidity 0.7.5;\\n\\ninterface IBalancerPool {\\n  function swapExactAmountIn(\\n    address tokenIn,\\n    uint256 tokenAmountIn,\\n    address tokenOut,\\n    uint256 minAmountOut,\\n    uint256 maxPrice\\n  ) external returns (uint256 tokenAmountOut, uint256 spotPriceAfter);\\n}\\n\",\"keccak256\":\"0x2bb5d5e1d2f6cd9ceb659b07050a9b5ff0317b0aac02b464c9f2b5b3c0070e2a\",\"license\":\"GPL-3.0-only\"},\"contracts/external/IERC20.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0-only\\npragma solidity 0.7.5;\\n\\ninterface IERC20 {\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x4bac7c8ba4748e70e249b5a302967305182c9be4320eab799cb4b994f7a3bcb7\",\"license\":\"GPL-3.0-only\"},\"contracts/external/IUniswap.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0-only\\npragma solidity 0.7.5;\\n\\ninterface IUniswapPairCallee {\\n  function uniswapV2Call(\\n    address sender,\\n    uint256 amount0,\\n    uint256 amount1,\\n    bytes calldata data\\n  ) external;\\n}\\n\\ninterface IUniswapPair {\\n  function getReserves()\\n    external\\n    view\\n    returns (\\n      uint112 reserve0,\\n      uint112 reserve1,\\n      uint32 blockTimestampLast\\n    );\\n\\n  function swap(\\n    uint256 amount0Out,\\n    uint256 amount1Out,\\n    address to,\\n    bytes calldata data\\n  ) external;\\n}\\n\",\"keccak256\":\"0x5d51b8900306823a8248235095392d6e00632be21c0dd61c3b6e61c6e2fdbbf9\",\"license\":\"GPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061085b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806310d1e85c1461003b57806331b30a7f146100c9575b600080fd5b6100c76004803603608081101561005157600080fd5b6001600160a01b03823516916020810135916040820135919081019060808101606082013564010000000081111561008857600080fd5b82018360208201111561009a57600080fd5b803590602001918460018302840111640100000000831117156100bc57600080fd5b50909250905061012c565b005b6100c760048036036101208110156100e057600080fd5b5060ff813516906020810135906001600160a01b0360408201358116916060810135821691608082013581169160a08101359091169060c08101359060e081013590610100013561046f565b600080600080600080878760c081101561014557600080fd5b506001600160a01b0381358116975060208201358116965060408201358116955060608201351693506080810135925060a00135905060008080808d156101a057508c9250859050866101998486886107fd565b92506101b6565b508b9250869050856101b38487876107fd565b92505b806001600160a01b031663095ea7b38b866040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561020d57600080fd5b505af1158015610221573d6000803e3d6000fd5b505050506040513d602081101561023757600080fd5b505060408051638201aa3f60e01b81526001600160a01b0383811660048301526024820187905284811660448301526064820186905260001960848301528251600093918e1692638201aa3f9260a480830193919282900301818787803b1580156102a157600080fd5b505af11580156102b5573d6000803e3d6000fd5b505050506040513d60408110156102cb57600080fd5b50516040805163a9059cbb60e01b81523360048201526024810187905290519192506001600160a01b0385169163a9059cbb916044808201926020929091908290030181600087803b15801561032057600080fd5b505af1158015610334573d6000803e3d6000fd5b505050506040513d602081101561034a57600080fd5b505161038e576040805162461bcd60e51b815260206004820152600e60248201526d14185e589858dac819985a5b195960921b604482015290519081900360640190fd5b826001600160a01b031663a9059cbb8b8684036040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b1580156103e757600080fd5b505af11580156103fb573d6000803e3d6000fd5b505050506040513d602081101561041157600080fd5b505161045d576040805162461bcd60e51b815260206004820152601660248201527514d95b99195c881d1c985b9cd9995c8819985a5b195960521b604482015290519081900360640190fd5b50505050505050505050505050505050565b8043146104b7576040805162461bcd60e51b81526020600482015260116024820152702232b630bcb2b21032bc32b1baba34b7b760791b604482015290519081900360640190fd5b600080886001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156104f357600080fd5b505afa158015610507573d6000803e3d6000fd5b505050506040513d606081101561051d57600080fd5b5080516020909101516dffffffffffffffffffffffffffff9182169350169050848214610585576040805162461bcd60e51b81526020600482015260116024820152700a4cae6cae4ecca6040dad2e6dac2e8c6d607b1b604482015290519081900360640190fd5b8381146105cd576040805162461bcd60e51b81526020600482015260116024820152700a4cae6cae4ecca6240dad2e6dac2e8c6d607b1b604482015290519081900360640190fd5b604080516001600160a01b03808b1660208301523382840152808a1660608301528816608082015260a0810187905260c08082018790528251808303909101815260e090910190915260008c600181111561062457fe5b141561071157896001600160a01b031663022c0d9f8c600030856040518563ffffffff1660e01b815260040180858152602001848152602001836001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b838110156106a557818101518382015260200161068d565b50505050905090810190601f1680156106d25780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b1580156106f457600080fd5b505af1158015610708573d6000803e3d6000fd5b505050506107ef565b896001600160a01b031663022c0d9f60008d30856040518563ffffffff1660e01b815260040180858152602001848152602001836001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561078c578181015183820152602001610774565b50505050905090810190601f1680156107b95780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b1580156107db57600080fd5b505af115801561045d573d6000803e3d6000fd5b505050505050505050505050565b60006103e8838502026103e58584030280828161081657fe5b0460010192505050939250505056fea2646970667358221220c610d630657edd16eae3bc924bdc89bf4732319cee5dfebcf42ac27bb4d3c1f364736f6c63430007050033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c806310d1e85c1461003b57806331b30a7f146100c9575b600080fd5b6100c76004803603608081101561005157600080fd5b6001600160a01b03823516916020810135916040820135919081019060808101606082013564010000000081111561008857600080fd5b82018360208201111561009a57600080fd5b803590602001918460018302840111640100000000831117156100bc57600080fd5b50909250905061012c565b005b6100c760048036036101208110156100e057600080fd5b5060ff813516906020810135906001600160a01b0360408201358116916060810135821691608082013581169160a08101359091169060c08101359060e081013590610100013561046f565b600080600080600080878760c081101561014557600080fd5b506001600160a01b0381358116975060208201358116965060408201358116955060608201351693506080810135925060a00135905060008080808d156101a057508c9250859050866101998486886107fd565b92506101b6565b508b9250869050856101b38487876107fd565b92505b806001600160a01b031663095ea7b38b866040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561020d57600080fd5b505af1158015610221573d6000803e3d6000fd5b505050506040513d602081101561023757600080fd5b505060408051638201aa3f60e01b81526001600160a01b0383811660048301526024820187905284811660448301526064820186905260001960848301528251600093918e1692638201aa3f9260a480830193919282900301818787803b1580156102a157600080fd5b505af11580156102b5573d6000803e3d6000fd5b505050506040513d60408110156102cb57600080fd5b50516040805163a9059cbb60e01b81523360048201526024810187905290519192506001600160a01b0385169163a9059cbb916044808201926020929091908290030181600087803b15801561032057600080fd5b505af1158015610334573d6000803e3d6000fd5b505050506040513d602081101561034a57600080fd5b505161038e576040805162461bcd60e51b815260206004820152600e60248201526d14185e589858dac819985a5b195960921b604482015290519081900360640190fd5b826001600160a01b031663a9059cbb8b8684036040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b1580156103e757600080fd5b505af11580156103fb573d6000803e3d6000fd5b505050506040513d602081101561041157600080fd5b505161045d576040805162461bcd60e51b815260206004820152601660248201527514d95b99195c881d1c985b9cd9995c8819985a5b195960521b604482015290519081900360640190fd5b50505050505050505050505050505050565b8043146104b7576040805162461bcd60e51b81526020600482015260116024820152702232b630bcb2b21032bc32b1baba34b7b760791b604482015290519081900360640190fd5b600080886001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156104f357600080fd5b505afa158015610507573d6000803e3d6000fd5b505050506040513d606081101561051d57600080fd5b5080516020909101516dffffffffffffffffffffffffffff9182169350169050848214610585576040805162461bcd60e51b81526020600482015260116024820152700a4cae6cae4ecca6040dad2e6dac2e8c6d607b1b604482015290519081900360640190fd5b8381146105cd576040805162461bcd60e51b81526020600482015260116024820152700a4cae6cae4ecca6240dad2e6dac2e8c6d607b1b604482015290519081900360640190fd5b604080516001600160a01b03808b1660208301523382840152808a1660608301528816608082015260a0810187905260c08082018790528251808303909101815260e090910190915260008c600181111561062457fe5b141561071157896001600160a01b031663022c0d9f8c600030856040518563ffffffff1660e01b815260040180858152602001848152602001836001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b838110156106a557818101518382015260200161068d565b50505050905090810190601f1680156106d25780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b1580156106f457600080fd5b505af1158015610708573d6000803e3d6000fd5b505050506107ef565b896001600160a01b031663022c0d9f60008d30856040518563ffffffff1660e01b815260040180858152602001848152602001836001600160a01b0316815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561078c578181015183820152602001610774565b50505050905090810190601f1680156107b95780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b1580156107db57600080fd5b505af115801561045d573d6000803e3d6000fd5b505050505050505050505050565b60006103e8838502026103e58584030280828161081657fe5b0460010192505050939250505056fea2646970667358221220c610d630657edd16eae3bc924bdc89bf4732319cee5dfebcf42ac27bb4d3c1f364736f6c63430007050033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}